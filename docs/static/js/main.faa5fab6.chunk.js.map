{"version":3,"sources":["components/AddCategory.js","components/GiftGridItem.js","helpers/getGifs.js","components/GifGridWithCustomHooks.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","categories","length","category","type","value","onChange","target","GiftGridItem","item","className","src","url","alt","title","getGiftSearch","a","encodeURI","fetch","response","json","data","gifs","map","img","id","images","downsized_medium","GifGridWithCustomHooks","state","loading","setState","useEffect","then","setTimeout","useFetchGifs","console","log","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAgBhD,OACE,sBAAMC,SAZa,SAACC,GACpBA,EAAEC,iBACFN,GAAc,SAACO,GACb,GAA0B,IAAtBL,EAAWM,OACb,OAAOD,EAET,IAAIE,EAAWP,EAEf,OADAC,EAAc,IACR,CAAEM,GAAR,mBAAqBF,QAIvB,SACE,uBAAOG,KAAK,OAAOC,MAAOT,EAAYU,SAhBf,SAACP,GAC1BF,EAAcE,EAAEQ,OAAOF,aCJdG,EAAe,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC7B,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKC,IAAKJ,EAAKK,QAC9B,4BAAIL,EAAKK,Y,uBCNFC,EAAa,uCAAG,WAAOZ,GAAP,uBAAAa,EAAA,6DACrBJ,EADqB,0FACoEK,UAC7Fd,GAFyB,uBAIJe,MAAMN,GAJF,cAIrBO,EAJqB,gBAKJA,EAASC,OALL,uBAKnBC,EALmB,EAKnBA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRX,MAAOU,EAAIV,MACXF,IAAG,UAAEY,EAAIE,cAAN,aAAE,EAAYC,iBAAiBf,QAVX,kBAapBU,GAboB,4CAAH,sDCIbM,EAAyB,SAAC,GAAkB,IAAhBzB,EAAe,EAAfA,SACjC0B,ECFoB,SAAC1B,GAAc,IAAD,EACdR,mBAAS,CACjC0B,KAAM,GACNS,SAAS,IAH6B,mBACjCD,EADiC,KAC1BE,EAD0B,KAgBxC,OAXAC,qBAAU,WACRjB,EAAcZ,GAAU8B,MAAK,SAACP,GAAD,OAC3BQ,YAAW,WACTH,EAAS,CACPV,KAAMK,EACNI,SAAS,YAId,IAEID,EDdOM,CAAahC,GAE3B,OADAiC,QAAQC,IAAIR,GAEV,qCACE,6BAAK1B,IACJ0B,EAAMC,SAAW,6CAClB,qBAAKpB,UAAU,YAAf,SACGmB,EAAMR,KAAKE,KAAI,SAACd,GAAD,OACd,cAAC,EAAD,CAA4BA,KAAMA,GAAfA,EAAKgB,aETrBa,EAAgB,WAAO,IAAD,EACG3C,mBAAS,CAAC,eADb,mBAC1BM,EAD0B,KACdP,EADc,KAGjC,OACE,gCACE,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACGO,EAAWsB,KAAI,SAACpB,GACf,OAAO,cAAC,EAAD,CAAuCA,SAAUA,GAApBA,Y,MCN9CoC,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.faa5fab6.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport const AddCategory = ({ setCategories }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n  const onChangeInputValue = (e) => {\n    setInputValue(e.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setCategories((categories) => {\n      if (inputValue.length === 0) {\n        return categories;\n      }\n      let category = inputValue;\n      setInputValue(\"\");\n      return [category, ...categories];\n    });\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type='text' value={inputValue} onChange={onChangeInputValue} />\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n};\n","import React from \"react\";\n\nexport const GiftGridItem = ({ item }) => {\n  return (\n    <div className='card animate__animated animate__bounce'>\n      <img src={item.url} alt={item.title}></img>\n      <p>{item.title}</p>\n    </div>\n  );\n};\n","export const getGiftSearch = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=slinwMM6g9I7khDhVFqOL5OOeBrDCENp&q=${encodeURI(\n    category\n  )}&limit=10;`;\n  const response = await fetch(url);\n  const { data } = await response.json();\n  const gifs = data.map((img) => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url,\n    };\n  });\n  return gifs;\n};\n","import React from \"react\";\nimport { GiftGridItem } from \"./GiftGridItem\";\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\n\nexport const GifGridWithCustomHooks = ({ category }) => {\n  const state = useFetchGifs(category);\n  console.log(state);\n  return (\n    <>\n      <h3>{category}</h3>\n      {state.loading && <p>Cargando ...</p>}\n      <div className='card-grid'>\n        {state.data.map((item) => (\n          <GiftGridItem key={item.id} item={item} />\n        ))}\n      </div>\n    </>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { getGiftSearch } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true,\n  });\n  useEffect(() => {\n    getGiftSearch(category).then((images) =>\n      setTimeout(() => {\n        setState({\n          data: images,\n          loading: false,\n        });\n      })\n    );\n  }, []);\n\n  return state;\n};\n","import React, { useState } from \"react\";\nimport { AddCategory } from \"./components/AddCategory\";\nimport { GifGridWithCustomHooks } from \"./components/GifGridWithCustomHooks\";\n\nexport const GiftExpertApp = () => {\n  const [categories, setCategories] = useState([\"DragonBall\"]);\n\n  return (\n    <div>\n      <h2>GiftExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      <ol>\n        {categories.map((category) => {\n          return <GifGridWithCustomHooks key={category} category={category} />;\n        })}\n      </ol>\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { GiftExpertApp } from \"./GiftExpertApp\";\n\nimport \"./index.css\";\n\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}